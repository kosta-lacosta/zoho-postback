// üü¢ –î–µ–ø–æ–∑–∏—Ç - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
if (type === 'deposit') {
  // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –ª–∏–¥ –ø–æ click_id –∏–ª–∏ email
  const lead = await findLead(clickId, email, headers);
  
  if (lead) {
    console.log('–ù–∞–π–¥–µ–Ω –ª–∏–¥ –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞:', {
      id: lead.id,
      Last_Name: lead.Last_Name,
      Email: lead.Email,
      click_id_Alanbase: lead.click_id_Alanbase,
      Lead_Status: lead.Lead_Status
    });

    // –ï—Å–ª–∏ –ª–∏–¥ –Ω–∞–π–¥–µ–Ω - –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –≤ —Å—Ç–∞–¥–∏—é FTD
    await axios.put(
      'https://www.zohoapis.eu/crm/v2/Leads',
      {
        data: [{ id: lead.id, Lead_Status: 'FTD' }]
      },
      { headers }
    );
    
    // –ö–û–ù–í–ï–†–¢–ò–†–£–ï–ú –õ–ò–î –í –ö–û–ù–¢–ê–ö–¢ –ò –°–î–ï–õ–ö–£
    console.log('–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ª–∏–¥:', lead.id);

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    const convertData = {
      overwrite: true,
      notify_lead_owner: false,
      notify_new_entity_owner: false,
      Contacts: {
        // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ - –∏–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
        Last_Name: lead.Last_Name || lead.Email?.split('@')[0] || `Contact_${clickId}` || 'Unknown'
      },
      Deals: {
        // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Å–¥–µ–ª–∫–∏
        Deal_Name: `Retention Deal ${lead.Last_Name || lead.Email || clickId}`,
        Stage: 'Qualification'
      }
    };

    // –î–æ–±–∞–≤–ª—è–µ–º email —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –≤–∞–ª–∏–¥–Ω—ã–π
    if (lead.Email && lead.Email.includes('@') && lead.Email.length > 5) {
      convertData.Contacts.Email = lead.Email;
      convertData.Deals.Email = lead.Email;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º click_id —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –∏ –Ω–µ –ø—É—Å—Ç–æ–π
    if (lead.click_id_Alanbase || clickId) {
      const clickIdValue = lead.click_id_Alanbase || clickId;
      if (clickIdValue && clickIdValue.toString().trim()) {
        convertData.Contacts.click_id_Alanbase = clickIdValue;
        convertData.Deals.click_id_Alanbase = clickIdValue;
      }
    }

    try {
      const convertResp = await axios.post(
        `https://www.zohoapis.eu/crm/v2/Leads/${lead.id}/actions/convert`,
        {
          data: [convertData]
        },
        { headers }
      );

      console.log('Convert API Response:', JSON.stringify(convertResp.data, null, 2));

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ
      if (convertResp.data?.data?.[0]?.status === 'error') {
        const errorDetails = convertResp.data.data[0];
        console.error('–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:', errorDetails);
        throw new Error(`–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –ª–∏–¥–∞: ${errorDetails.message} (${errorDetails.code})`);
      }

      if (!convertResp.data?.data?.[0]) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏–¥ - –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API');
      }

      const convertedData = convertResp.data.data[0];
      console.log('Converted data structure:', JSON.stringify(convertedData, null, 2));
      
      let contactId, retentionId;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
      if (convertedData.details) {
        // –í–∞—Ä–∏–∞–Ω—Ç 1: –¥–∞–Ω–Ω—ã–µ –≤ details
        contactId = convertedData.details.Contacts?.id || convertedData.details.Contacts;
        retentionId = convertedData.details.Deals?.id || convertedData.details.Deals;
      } else if (convertedData.Contacts || convertedData.Deals) {
        // –í–∞—Ä–∏–∞–Ω—Ç 2: –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é
        contactId = convertedData.Contacts?.id || convertedData.Contacts;
        retentionId = convertedData.Deals?.id || convertedData.Deals;
      } else if (convertedData.message && convertedData.message === 'success') {
        // –í–∞—Ä–∏–∞–Ω—Ç 3: —É—Å–ø–µ—à–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è, –Ω–æ –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
        console.log('–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –∏—â–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏...');
        
        // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ Zoho
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // –ò—â–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ email –∏–ª–∏ click_id
        const createdContact = await findContact(clickId, email, headers);
        if (createdContact) {
          contactId = createdContact.id;
          console.log('–ù–∞–π–¥–µ–Ω —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç:', contactId);
        }
        
        // –ò—â–µ–º —Å–¥–µ–ª–∫—É –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç—É
        if (contactId) {
          const createdDeal = await findDeal(contactId, clickId, email, headers);
          if (createdDeal) {
            retentionId = createdDeal.id;
            console.log('–ù–∞–π–¥–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω–∞—è —Å–¥–µ–ª–∫–∞:', retentionId);
          }
        }
      }

      // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞—à–ª–∏ ID –ø–æ—Å–ª–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏, —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ —Å–¥–µ–ª–∫—É –≤—Ä—É—á–Ω—É—é
      if (!contactId || !retentionId) {
        console.log('–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ ID, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤—Ä—É—á–Ω—É—é...');
        
        try {
          // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –≤—Ä—É—á–Ω—É—é
          if (!contactId) {
            const contactCreateData = {
              Last_Name: lead.Last_Name || lead.Email?.split('@')[0] || `Contact_${clickId}` || 'Unknown'
            };

            if (lead.Email && lead.Email.includes('@') && lead.Email.length > 5) {
              contactCreateData.Email = lead.Email;
            }
            if (lead.click_id_Alanbase || clickId) {
              const clickIdValue = lead.click_id_Alanbase || clickId;
              if (clickIdValue && clickIdValue.toString().trim()) {
                contactCreateData.click_id_Alanbase = clickIdValue;
              }
            }

            const contactCreateResp = await axios.post(
              'https://www.zohoapis.eu/crm/v2/Contacts',
              { data: [contactCreateData] },
              { headers }
            );

            if (contactCreateResp.data?.data?.[0]?.details?.id) {
              contactId = contactCreateResp.data.data[0].details.id;
              console.log('–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ–∑–¥–∞–Ω –≤—Ä—É—á–Ω—É—é:', contactId);
            }
          }

          // –°–æ–∑–¥–∞–µ–º —Å–¥–µ–ª–∫—É –≤—Ä—É—á–Ω—É—é
          if (contactId && !retentionId) {
            const dealCreateData = {
              Deal_Name: `Retention Deal ${lead.Last_Name || lead.Email || clickId}`,
              Stage: 'Qualification',
              Contact_Name: contactId
            };

            if (lead.click_id_Alanbase || clickId) {
              const clickIdValue = lead.click_id_Alanbase || clickId;
              if (clickIdValue && clickIdValue.toString().trim()) {
                dealCreateData.click_id_Alanbase = clickIdValue;
              }
            }
            if (lead.Email && lead.Email.includes('@') && lead.Email.length > 5) {
              dealCreateData.Email = lead.Email;
            }

            const dealCreateResp = await axios.post(
              'https://www.zohoapis.eu/crm/v2/Deals',
              { data: [dealCreateData] },
              { headers }
            );

            if (dealCreateResp.data?.data?.[0]?.details?.id) {
              retentionId = dealCreateResp.data.data[0].details.id;
              console.log('–°–¥–µ–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤—Ä—É—á–Ω—É—é:', retentionId);
            }
          }
        } catch (manualCreateError) {
          console.error('–û—à–∏–±–∫–∞ —Ä—É—á–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è:', manualCreateError?.response?.data || manualCreateError.message);
        }
      }

      if (!contactId || !retentionId) {
        console.error('–ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:', JSON.stringify(convertResp.data, null, 2));
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∏–ª–∏ —Å–¥–µ–ª–∫–∏ –ø–æ—Å–ª–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏');
      }
      
      console.log('–õ–∏–¥ —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω:', {
        leadId: lead.id,
        contactId,
        dealId: retentionId
      });

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ —Å–¥–µ–ª–∫–µ, –µ—Å–ª–∏ –µ—Å—Ç—å —Å—É–º–º–∞
      if (retentionId && (amount || value)) {
        try {
          await axios.put(
            'https://www.zohoapis.eu/crm/v2/Deals',
            {
              data: [{
                id: retentionId,
                Amount: Number(amount || value) // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–ª–µ Amount
              }]
            },
            { headers }
          );
          console.log('–°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ —Å–¥–µ–ª–∫–µ');
        } catch (amountUpdateError) {
          console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É–º–º—ã:', amountUpdateError?.response?.data || amountUpdateError.message);
        }
      }

      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –¥–µ–ø–æ–∑–∏—Ç–∞
      try {
        const depositResp = await axios.post(
          'https://www.zohoapis.eu/crm/v2/deposits',
          {
            data: [{
              Name: `–î–µ–ø–æ–∑–∏—Ç –Ω–∞ —Å—É–º–º—É ${amount || value || 0}`,
              amount: Number(amount || value || 0),
              contact: contactId,
              Retention: retentionId,
              Currency: currency || 'USD',
              Email: lead.Email
            }]
          },
          { headers }
        );

        return res.json({ 
          success: true, 
          leadUpdated: true,
          converted: true,
          contactId: contactId,
          dealId: retentionId,
          deposit: depositResp.data 
        });
      } catch (depositError) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞:', depositError?.response?.data || depositError.message);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏, –¥–∞–∂–µ –µ—Å–ª–∏ –¥–µ–ø–æ–∑–∏—Ç –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è
        return res.json({ 
          success: true, 
          leadUpdated: true,
          converted: true,
          contactId: contactId,
          dealId: retentionId,
          depositError: depositError?.response?.data || depositError.message
        });
      }

    } catch (convertError) {
      console.error('–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –ª–∏–¥–∞:', convertError?.response?.data || convertError.message);
      
      // –ï—Å–ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –∏ —Å–¥–µ–ª–∫—É –≤—Ä—É—á–Ω—É—é
      console.log('–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—Ä—É—á–Ω—É—é...');
      
      try {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç
        const contactCreateData = {
          Last_Name: lead.Last_Name || lead.Email?.split('@')[0] || `Contact_${clickId}` || 'Unknown'
        };

        if (lead.Email && lead.Email.includes('@') && lead.Email.length > 5) {
          contactCreateData.Email = lead.Email;
        }
        if (lead.click_id_Alanbase || clickId) {
          const clickIdValue = lead.click_id_Alanbase || clickId;
          if (clickIdValue && clickIdValue.toString().trim()) {
            contactCreateData.click_id_Alanbase = clickIdValue;
          }
        }

        const contactCreateResp = await axios.post(
          'https://www.zohoapis.eu/crm/v2/Contacts',
          { data: [contactCreateData] },
          { headers }
        );

        let contactId;
        if (contactCreateResp.data?.data?.[0]?.details?.id) {
          contactId = contactCreateResp.data.data[0].details.id;
          console.log('–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ–∑–¥–∞–Ω –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:', contactId);
        } else {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç');
        }

        // –°–æ–∑–¥–∞–µ–º —Å–¥–µ–ª–∫—É
        const dealCreateData = {
          Deal_Name: `Retention Deal ${lead.Last_Name || lead.Email || clickId}`,
          Stage: 'Qualification',
          Contact_Name: contactId,
          Amount: Number(amount || value || 0)
        };

        if (lead.click_id_Alanbase || clickId) {
          const clickIdValue = lead.click_id_Alanbase || clickId;
          if (clickIdValue && clickIdValue.toString().trim()) {
            dealCreateData.click_id_Alanbase = clickIdValue;
          }
        }
        if (lead.Email && lead.Email.includes('@') && lead.Email.length > 5) {
          dealCreateData.Email = lead.Email;
        }

        const dealCreateResp = await axios.post(
          'https://www.zohoapis.eu/crm/v2/Deals',
          { data: [dealCreateData] },
          { headers }
        );

        let retentionId;
        if (dealCreateResp.data?.data?.[0]?.details?.id) {
          retentionId = dealCreateResp.data.data[0].details.id;
          console.log('–°–¥–µ–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:', retentionId);
        } else {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É');
        }

        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –¥–µ–ø–æ–∑–∏—Ç–∞
        const depositResp = await axios.post(
          'https://www.zohoapis.eu/crm/v2/deposits',
          {
            data: [{
              Name: `–î–µ–ø–æ–∑–∏—Ç –Ω–∞ —Å—É–º–º—É ${amount || value || 0}`,
              amount: Number(amount || value || 0),
              contact: contactId,
              Retention: retentionId,
              Currency: currency || 'USD',
              Email: lead.Email
            }]
          },
          { headers }
        );

        return res.json({ 
          success: true, 
          leadUpdated: true,
          converted: false,
          manuallyCreated: true,
          contactId: contactId,
          dealId: retentionId,
          deposit: depositResp.data 
        });

      } catch (manualError) {
        console.error('–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π:', manualError?.response?.data || manualError.message);
        throw convertError; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –æ—à–∏–±–∫—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
      }
    }
    
  } else {
    // –ï—Å–ª–∏ –ª–∏–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω - –∏—â–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ —Å–¥–µ–ª–∫—É
    const contact = await findContact(clickId, email, headers);
    if (!contact) {
      throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –ª–∏–¥, –Ω–∏ –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ click_id –∏–ª–∏ email');
    }

    // –ò—â–µ–º —Å–¥–µ–ª–∫—É –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
    const deal = await findDeal(contact.id, clickId, email, headers);
    if (!deal) {
      throw new Error('Retention-—Å–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞');
    }

    // –°–æ–∑–¥–∞–µ–º –¥–µ–ø–æ–∑–∏—Ç
    const depositResp = await axios.post(
      'https://www.zohoapis.eu/crm/v2/deposits',
      {
        data: [{
          Name: `–î–µ–ø–æ–∑–∏—Ç –Ω–∞ —Å—É–º–º—É ${amount || value}`,
          amount: Number(amount || value || 0),
          contact: contact.id,
          Retention: deal.id,
          Currency: currency || 'USD',
          Email: email
        }]
      },
      { headers }
    );

    return res.json({ 
      success: true, 
      deposit: depositResp.data 
    });
  }
}
